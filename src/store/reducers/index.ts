import { AnyAction, combineReducers, Reducer } from 'redux';

import { AppState } from 'src/types/redux';
import { exampleReducer } from './example';
import { apiRequestsReducer } from './api-requests';
import { contractPrintersReducer } from './contract_printers';
import { ACTIONS_TYPES as UserActionsTypes, userReducer } from './user';
import {toasterReducer} from "./toaster";

// Combine all application reducers to delegate them to
// the root reducer that will be exported to the store
const appReducers: Reducer<AppState> = combineReducers({
  example: exampleReducer,
  apiRequests: apiRequestsReducer,
  contractPrinters: contractPrintersReducer,
  user: userReducer,
  toaster: toasterReducer,
});

export const reducers = (state: AppState | undefined, action: AnyAction): AppState => {
  // Delegate handling the action to the reducer generated by `combineReducers()`
  // if (action.type === UserActionsTypes.LOGOUT){ //TODO: {names} set good name to action!!!!
  //   state = undefined;
  // }
  return appReducers(state, action);
};
